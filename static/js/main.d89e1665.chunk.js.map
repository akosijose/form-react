{"version":3,"sources":["components/Table.js","components/Form.js","App.js","index.js"],"names":["TableHeader","TableBody","characterData","removeCharacter","row","map","index","name","job","onClick","Table","props","Form","initialState","state","handleChange","event","target","value","setState","submitForm","handleSubmit","this","htmlFor","type","id","onChange","Component","App","characters","filter","character","i","className","ReactDOM","render","document","getElementById"],"mappings":"gNAEMA,EAAc,WAClB,OACE,gCACE,+BACE,sCACA,2CAeFC,EAAY,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,cAAeC,EAAsB,EAAtBA,gBAC5BC,EAAMF,EAAcG,KAAI,SAACD,EAAKE,GAClC,OACE,+BACE,6BAAKF,EAAIG,OACT,6BAAKH,EAAII,MACT,6BACE,wBAAQC,QAAS,kBAAMN,EAAgBG,IAAvC,wBAJKA,MAUb,OAAO,gCAAQF,KAGFM,EAzBD,SAAAC,GACZ,OACE,kCACE,cAAC,EAAD,IACA,cAAC,EAAD,eAAeA,Q,OCgCNC,E,4MA9CbC,aAAe,CACbN,KAAM,GACNC,IAAK,I,EAGPM,MAAQ,EAAKD,a,EAEbE,aAAe,SAAAC,GACb,MAAwBA,EAAMC,OAAtBV,EAAR,EAAQA,KAAMW,EAAd,EAAcA,MAEd,EAAKC,SAAL,eACGZ,EAAOW,K,EAIZE,WAAa,WACX,EAAKT,MAAMU,aAAa,EAAKP,OAC7B,EAAKK,SAAS,EAAKN,e,4CAGrB,WACE,MAAsBS,KAAKR,MAAnBP,EAAR,EAAQA,KAAMC,EAAd,EAAcA,IAEd,OACE,iCACE,uBAAOe,QAAQ,OAAf,kBACA,uBACEC,KAAK,OACLjB,KAAK,OACLkB,GAAG,OACHP,MAAOX,EACPmB,SAAUJ,KAAKP,eAEjB,uBAAOQ,QAAQ,MAAf,iBACA,uBACEC,KAAK,OACLjB,KAAK,MACLkB,GAAG,MACHP,MAAOV,EACPkB,SAAUJ,KAAKP,eAEjB,uBAAOS,KAAK,SAASN,MAAM,SAAST,QAASa,KAAKF,oB,GA1CvCO,aCqCJC,E,4MAjCbd,MAAQ,CACNe,WAAY,I,EAGd1B,gBAAkB,SAAAG,GAChB,IAAQuB,EAAe,EAAKf,MAApBe,WAER,EAAKV,SAAS,CACZU,WAAYA,EAAWC,QAAO,SAACC,EAAWC,GACxC,OAAOA,IAAM1B,Q,EAKnBe,aAAe,SAAAU,GACb,EAAKZ,SAAS,CAAEU,WAAW,GAAD,mBAAM,EAAKf,MAAMe,YAAjB,CAA6BE,O,4CAGzD,WACE,IAAQF,EAAeP,KAAKR,MAApBe,WAER,OACE,sBAAKI,UAAU,YAAf,UACE,cAAC,EAAD,CACE/B,cAAe2B,EACf1B,gBAAiBmB,KAAKnB,kBAExB,cAAC,EAAD,CAAMkB,aAAcC,KAAKD,sB,GA5BfM,aCDlBO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.d89e1665.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nconst TableHeader = () => {\r\n  return (\r\n    <thead>\r\n      <tr>\r\n        <th>Name</th>\r\n        <th>Job</th>\r\n      </tr>\r\n    </thead>\r\n  );\r\n};\r\n\r\nconst Table = props => {\r\n  return (\r\n    <table>\r\n      <TableHeader />\r\n      <TableBody {...props} />\r\n    </table>\r\n  );\r\n};\r\n\r\nconst TableBody = ({ characterData, removeCharacter }) => {\r\n  const row = characterData.map((row, index) => {\r\n    return (\r\n      <tr key={index}>\r\n        <td>{row.name}</td>\r\n        <td>{row.job}</td>\r\n        <td>\r\n          <button onClick={() => removeCharacter(index)}>Delete</button>\r\n        </td>\r\n      </tr>\r\n    );\r\n  });\r\n\r\n  return <tbody>{row}</tbody>;\r\n};\r\n\r\nexport default Table;\r\n","import React, { Component } from 'react';\r\n\r\nclass Form extends Component {\r\n  initialState = {\r\n    name: '',\r\n    job: ''\r\n  };\r\n\r\n  state = this.initialState;\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.target;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  submitForm = () => {\r\n    this.props.handleSubmit(this.state);\r\n    this.setState(this.initialState);\r\n  };\r\n\r\n  render() {\r\n    const { name, job } = this.state;\r\n\r\n    return (\r\n      <form>\r\n        <label htmlFor=\"name\">Name</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          id=\"name\"\r\n          value={name}\r\n          onChange={this.handleChange}\r\n        />\r\n        <label htmlFor=\"job\">Job</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"job\"\r\n          id=\"job\"\r\n          value={job}\r\n          onChange={this.handleChange}\r\n        />\r\n        <input type=\"button\" value=\"Submit\" onClick={this.submitForm} />\r\n      </form>\r\n    );\r\n  }\r\n}\r\nexport default Form;\r\n","import React, { Component } from 'react';\nimport './style.css';\nimport Table from './components/Table';\nimport Form from './components/Form';\n\nclass App extends Component {\n  state = {\n    characters: []\n  };\n\n  removeCharacter = index => {\n    const { characters } = this.state;\n\n    this.setState({\n      characters: characters.filter((character, i) => {\n        return i !== index;\n      })\n    });\n  };\n\n  handleSubmit = character => {\n    this.setState({ characters: [...this.state.characters, character] });\n  };\n\n  render() {\n    const { characters } = this.state;\n\n    return (\n      <div className=\"container\">\n        <Table\n          characterData={characters}\n          removeCharacter={this.removeCharacter}\n        />\n        <Form handleSubmit={this.handleSubmit} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}